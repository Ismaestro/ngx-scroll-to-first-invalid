{
  "root": true,
  "ignorePatterns": ["projects/**/*"],
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.json"],
        "createDefaultProgram": true
      },
      "plugins": [
        "eslint-comments",
        "import",
        "optimize-regex",
        "promise",
        "security",
        "sonarjs",
        "rxjs-angular"
      ],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:eslint-comments/recommended",
        "plugin:import/warnings",
        "plugin:import/typescript",
        "plugin:optimize-regex/all",
        "plugin:sonarjs/recommended",
        "plugin:prettier/recommended",
        "plugin:promise/recommended",
        "plugin:regexp/recommended",
        "plugin:security/recommended",
        "plugin:@angular-eslint/recommended"
      ],
      "rules": {
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-types": [
          "error",
          {
            "types": {
              "String": {
                "message": "Use string instead",
                "fixWith": "string"
              },
              "Boolean": {
                "message": "Use boolean instead",
                "fixWith": "boolean"
              },
              "Number": {
                "message": "Use number instead",
                "fixWith": "number"
              }
            }
          }
        ],
        "@typescript-eslint/consistent-type-definitions": "error",
        "@typescript-eslint/dot-notation": "off",
        "@typescript-eslint/explicit-member-accessibility": [
          "off",
          {
            "accessibility": "explicit"
          }
        ],
        "@typescript-eslint/no-extra-semi": "error",
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/require-array-sort-compare": [
          "error",
          {
            "ignoreStringArrays": true
          }
        ],
        "@typescript-eslint/quotes": "off",
        "@typescript-eslint/naming-convention": "off",
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/no-shadow": ["error"],
        "@typescript-eslint/no-unused-expressions": "off",
        "brace-style": ["error", "1tbs", { "allowSingleLine": true }],
        "default-case-last": "error",
        "dot-notation": "off",
        "id-denylist": "off",
        "id-match": "off",
        "complexity": ["error", { "max": 8 }],
        "max-len": [
          "error",
          {
            "code": 600
          }
        ],
        "max-lines-per-function": [
          "error",
          {
            "max": 30
          }
        ],
        "max-params": [
          "error",
          {
            "max": 3
          }
        ],
        "@angular-eslint/directive-selector": "error",
        "@angular-eslint/use-injectable-provided-in": "error",
        "@angular-eslint/use-lifecycle-interface": "error",
        "@angular-eslint/no-pipe-impure": "error",
        "@angular-eslint/prefer-on-push-component-change-detection": "error",
        "@angular-eslint/no-conflicting-lifecycle": "error",
        "@angular-eslint/no-forward-ref": "error",
        "@angular-eslint/no-input-prefix": "error",
        "@angular-eslint/no-input-rename": "error",
        "@angular-eslint/no-output-on-prefix": "error",
        "@angular-eslint/no-output-rename": "error",
        "@angular-eslint/prefer-output-readonly": "error",
        "@angular-eslint/relative-url-prefix": "error",
        "@angular-eslint/use-component-selector": "error",
        "@angular-eslint/use-component-view-encapsulation": "error",
        "@angular-eslint/use-pipe-transform-interface": "error",
        "@angular-eslint/component-class-suffix": "error",
        "@angular-eslint/directive-class-suffix": "error",
        "@angular-eslint/no-host-metadata-property": "error",
        "@angular-eslint/no-inputs-metadata-property": "error",
        "@angular-eslint/no-outputs-metadata-property": "error",
        "@angular-eslint/no-queries-metadata-property": "error",
        "@angular-eslint/pipe-prefix": "error",
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "rxjs-angular/prefer-takeuntil": [
          "error",
          {
            "alias": ["untilDestroyed"],
            "checkComplete": true,
            "checkDecorators": ["Component"],
            "checkDestroy": false
          }
        ]
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {
        "@angular-eslint/template/no-call-expression": "error",
        "@angular-eslint/template/no-any": "error",
        "@angular-eslint/template/no-autofocus": "error",
        "@angular-eslint/template/no-distracting-elements": "error",
        "@angular-eslint/template/accessibility-alt-text": "error",
        "@angular-eslint/template/no-positive-tabindex": "error",
        "@angular-eslint/template/no-negated-async": "error",
        "@angular-eslint/template/accessibility-valid-aria": "error",
        "@angular-eslint/template/accessibility-elements-content": "error",
        "@angular-eslint/template/accessibility-label-for": "error",
        "@angular-eslint/template/click-events-have-key-events": "error",
        "@angular-eslint/template/mouse-events-have-key-events": "error",
        "@angular-eslint/template/accessibility-table-scope": "error",
        "@angular-eslint/template/conditional-complexity": "error",
        "@angular-eslint/template/use-track-by-function": "error",
        "@angular-eslint/template/i18n": "off"
      }
    }
  ]
}
